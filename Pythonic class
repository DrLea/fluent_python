from array import array


class Vector:
    typecode = 'd'

    def __init__(self, x: float, y: float):
        self.x = float(x)
        self.y = float(y)

    def __iter__(self):
        return (x for x in (self.x, self.y))

    def __repr__(self):
        return '{}({!r}, {!r})'.format(type(self).__name__, *self)
    
    def __str__(self):
        return str(tuple(self))
    
    def __bytes__(self):
        return bytes([ord(self.typecode)]) + bytes(array(self.typecode, self))
    
    def __eq__(self, other):
        return tuple(self) == tuple(other)
    
    def __abs__(self):
        return (self.x ** 2 + self.y ** 2) ** 0.5
    
    def __bool__(self):
        return bool(abs(self))
    

v1 = Vector(3, 4)
print(v1.x, v1.y)
x, y = v1 
print((3.0, 4.0) == x, y)
v1
print(v1)
v1_clone = eval(repr(v1))
v1 == v1_clone
print(v1)
octets = bytes(v1)
print(octets)
print(abs(v1))
print(bool(v1), bool(Vector(0, 0)))
